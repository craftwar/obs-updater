version: '{build}'
skip_tags: true
image: Visual Studio 2019
init:
  - ps: if (0) { iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1')) } #rdp debug
#environment:
#  SEVENZIP_VERSION: 1805
 
build_script:
# work around until appveyor installs nsis
#  - choco install nsis.install
  
# work around for curl (get from craftwar.obs_updater_VS2017_curl.zip)  
#  - if exist 7z%SEVENZIP_VERSION%-extra.7z (curl -kLO https://www.7-zip.org/a/7z%SEVENZIP_VERSION%-extra.7z -f --retry 5 -z 7z%SEVENZIP_VERSION%-extra.7z) else (curl -kLO https://www.7-zip.org/a/7z%SEVENZIP_VERSION%-extra.7z -f --retry 5 -C -)
#  - 7z x 7z%SEVENZIP_VERSION%-extra.7z -o7z-extra
#  - curl -kLO https://github.com/craftwar/obs-updater/releases/download/git/craftwar.obs_updater_VS2017_curl.zip -f --retry 5
#  - 7z x craftwar.obs_updater_VS2017_curl.zip
#  - cd craftwar.obs_updater
#  - mklink /H curl.exe ..\curl.exe

#  - set build_type=Debug
  - set build_type=Release
# %APPVEYOR_REPO_BRANCH%
#  - if "%APPVEYOR_REPO_BRANCH%" == "dev" (set build_type=Debug) else (set build_type=Release)

  - set VCPKG_CMAKE_SYSTEM_VERSION=10.0
  - set VCPKG_LINKER_FLAGS=/LTCG
  - set VCPKG_C_FLAGS=/Gw /Gy /GL /GS- /Qspectre- /Zc:__cplusplus
  - set VCPKG_CXX_FLAGS=%VCPKG_C_FLAGS%
# use 8, same as git describe --always --tags
  - set UPDATER_VER=%APPVEYOR_REPO_COMMIT:~0,8%
  - ps: Add-Content -NoNewline  -Path ".\version.txt" -Value "${env:UPDATER_VER}"
#[install vcpkg]
#  - cd C:\Tools
#  - cmd /c git clone https://github.com/Microsoft/vcpkg
#  - .\vcpkg\bootstrap-vcpkg.bat
#  - set path=C:\Tools\vcpkg;%path%
#  - cd %appveyor_build_folder%
#  - vcpkg integrate install
#[/install vcpkg]
#  - '"C:\Program Files\Git\usr\bin\sed.exe" -i "s/CRT_LINKAGE static/CRT_LINKAGE dynamic/" /c/tools/vcpkg/triplets/x64-windows-static.cmake' #patch to dynamic crt
#  - vcpkg install curl[winssl]:x64-windows-static
#  - '"C:\Program Files\Git\usr\bin\sed.exe" -i "s/VCPKG_LIBRARY_LINKAGE dynamic/VCPKG_LIBRARY_LINKAGE static/" /c/tools/vcpkg/triplets/x64-windows.cmake' #patch to produce static lib
  - vcpkg install curl[winssl]:x64-windows
  - cd updater
  - call msbuild /m /p:Configuration=%build_type%;Platform=x64 "%APPVEYOR_BUILD_FOLDER%\cpp_updater\obs-updater.sln" /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
  - copy "%APPVEYOR_BUILD_FOLDER%\cpp_updater\x64\%build_type%\*.exe" .
  - copy "%APPVEYOR_BUILD_FOLDER%\cpp_updater\x64\%build_type%\*.dll" .
#  - copy "%APPVEYOR_BUILD_FOLDER%\cpp_updater\x64\%build_type%\*.pdb" .
  - if "%APPVEYOR_REPO_BRANCH%" == "dev" (copy "%APPVEYOR_BUILD_FOLDER%\cpp_updater\x64\%build_type%\*.pdb" .)

  - mklink /H 7z.exe "C:\Program Files\7-Zip\7z.exe"
  - mklink /H 7z.dll "C:\Program Files\7-Zip\7z.dll"
  - 7z a "%APPVEYOR_BUILD_FOLDER%\craftwar.obs_updater.zip" -mx=9 -mpass=15 -mcu=on * -x!0_createZip.cmd -x!obs-studio.ico
  - cd ..
  - call installer\get-vc-ver.cmd
  - '"C:\Program Files (x86)\NSIS\Bin\makensis" /NOCD /NOCONFIG /INPUTCHARSET UTF8 /DVC_redist_ver=%VC_redist_ver% installer\installer.nsi'
#  - cmd
artifacts:
- path: version.txt
- path: craftwar.obs_updater.zip
- path: 'craftwar OBS installer.exe'

deploy:
  - provider: Environment
    name: github git
    tag: git
    release: $(release)
    force_update: true
    on:
      branch: master

test: off

cache:
#  - C:\tools\vcpkg\installed\
  - C:\tools\vcpkg\installed\ -> appveyor.yml
#cache:
#  - '7z%SEVENZIP_VERSION%-extra.7z'
